# Usage: You need to set the constants. Running the log-de.mpl Maple script
# should create the required sed files and give the command to run.

# NOTATION CONVENTION 
# Variables that correspond to double-precision variables in the code begin with a small letter
# Other variables begin with a capital letter.
# Variables that will be replaced with Maple-computed constants begin with an underscore
# Otherwise avoid underscores as they are painful to carry on to LaTeX :)

# polynomial coefficients, computed by Maple
c1 = _c1;
c2 = _c2;
c3 = _c3;
c4 = _c4;
c5 = _c5;
c6 = _c6;
c7 = _c7;
log2h  = _log2h;
log2l  = _log2l;
r     = _r;
logirh = _logirh;
logirl = _logirl;


# Transcription of the code, NOT using FMA
z2  <float80ne>= z*z;    
p67 <float80ne>= c6 + z*c7;       
p45 <float80ne>= c4 + z*c5;      
p23 <float80ne>= c2 + z*c3;    
p01 <float80ne>= logirh + z;
z4  <float80ne>= z2*z2;  
p47 <float80ne>= p45 + z2*p67;    
p03 <float80ne>= p01 + z2*p23; 
log <float80ne>= p03 + z4*p47;

# Exact mathematical definition of the log
Log = Log1pz + Logir;

#############   Now come auxiliary definitions

# Give the polynomial in Estrin form (no need to transcribe the intermediate steps)
# Since the argument reduction is exact, z=Z.
Z2 = z*z;
Z4 = Z2*Z2;
ALog  =  ( (logirh+z) + Z2*(c2+z*c3) )     + Z4*( (c4+z*c5) + Z2*(c6+z*c7)  ); 

# Useless definition, except for debugging the proof
P07R =  ( (logirh+z) + z2*(c2+z*c3) )     + z4*( (c4+z*c5) + z2*(c6+z*c7)  ); 



PolyLog1pz = z + Z2*(c2+z*c3) + Z4*( (c4+z*c5) + Z2*(c6+z*c7)  );


{
    z in [-_zmax, _zmax] 
/\  (logirh + logirl) - Logir in [-1b-129, 1b-129]
/\  (PolyLog1pz - Log1pz)/Log1pz in [-_epsilonApproxQuick, _epsilonApproxQuick]
/\  (PolyLog1pz - Log1pz) in [-_deltaApproxQuick, _deltaApproxQuick]
->
(log - Log)/Log in [-1b-61, 1b-61]
}




# Trivialities
Log2  -> (log2h + log2l) - ((log2h + log2l) - Log2);
Logir -> (logirh + logirl) - ((logirh + logirl) -Logir);
Log1pz -> PolyLog1pz - (PolyLog1pz - Log1pz);

(logirh-Logir) ->  ((logirh + logirl) - Logir) - logirl;

(log-Log)/Log -> (log - ALog)/ALog + (ALog - Log)/Log   +   ((log - ALog)/ALog) * ((ALog - Log)/Log);

# A complex rule obtained by substituting by hand the definitions of ALog and Log until they could be usefully aligned.
ALog - Log ->  (logirh-Logir) + (PolyLog1pz  - Log1pz) ;
(ALog - Log)/Log ->  (logirh-Logir)/Logir + (PolyLog1pz  - Log1pz)/Log1pz    +    ((logirh-Logir)/Logir) * ((PolyLog1pz  - Log1pz)/Log1pz) ;

