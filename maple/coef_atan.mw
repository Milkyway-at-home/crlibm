<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="0"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Warning"/><Layout alignment="left" bullet="dash" name="Dash Item" spaceabove="3.0" spacebelow="3.0"/><Layout alignment="left" bullet="none" name="Heading 4" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="left" bullet="none" name="Heading 3" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="left" bullet="none" name="Error"/><Layout alignment="centred" bullet="none" name="Author" spaceabove="8.0" spacebelow="8.0"/><Layout alignment="left" bullet="none" name="Heading 2" spaceabove="8.0" spacebelow="2.0"/><Layout alignment="left" bullet="none" linebreak="newline" name="Text Output"/><Layout alignment="left" bullet="none" name="Heading 1" spaceabove="8.0" spacebelow="4.0"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" name="Maple Plot"/><Layout alignment="left" bullet="none" linebreak="any" name="Line Printed Output"/><Layout alignment="centred" bullet="none" name="Title" spaceabove="12.0" spacebelow="12.0"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Layout alignment="left" bullet="indent" name="List Item" spaceabove="3.0" spacebelow="3.0"/><Layout alignment="left" bullet="dot" name="Bullet Item" spaceabove="3.0" spacebelow="3.0"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Warning" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Dash Item" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" bold="false" executable="false" family="Lucida Bright" foreground="[0,0,0]" italic="false" name="Text" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Serif" italic="true" name="Heading 4" opaque="false" size="12"/><Font background="[0,0,0]" bold="true" family="Serif" italic="true" name="Heading 3" opaque="false" size="14"/><Font background="[0,0,0]" family="Monospaced" foreground="[255,0,255]" name="Error" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" family="Times New Roman" name="Author" opaque="false" size="12"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 2" opaque="false" size="16"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Text Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 1" opaque="false" size="18"/><Font background="[0,0,0]" executable="true" family="Times New Roman" foreground="[255,0,0]" name="2D Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Serif" foreground="[0,128,128]" hyperlink="true" name="Hyperlink" opaque="false" size="12" underline="true"/><Font background="[0,0,0]" family="Lucida Bright" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Normal" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" family="Times New Roman" name="Title" opaque="false" size="18" underline="true"/><Font background="[0,0,0]" bold="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="List Item" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" bold="false" family="Times New Roman" foreground="[0,0,0]" italic="false" name="Bullet Item" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Times New Roman" name="Page Number" opaque="false" size="10" underline="false"/><Font background="[0,0,0]" executable="false" family="Times New Roman" foreground="[0,0,0]" name="2D Math" opaque="false" size="12"/><StrokePreset color="[255,255,0]" name="Highlighter 5" width="48"/><StrokePreset color="[0,255,255]" name="Highlighter 4" width="32"/><StrokePreset color="[51,255,0]" name="Highlighter 3" width="24"/><StrokePreset color="[255,204,0]" name="Highlighter 2" width="14"/><StrokePreset color="[255,153,255]" name="Highlighter 1" width="8"/><StrokePreset color="[255,0,0]" name="Pencil 5" width="5"/><StrokePreset color="[0,0,255]" name="Pencil 4" width="3"/><StrokePreset color="[0,0,0]" name="Pencil 3" width="3"/><StrokePreset color="[0,0,255]" name="Pencil 2" width="1"/><StrokePreset color="[0,0,0]" name="Pencil 1" width="1"/></Styles><Text-field><Worksheet><Version major="6" minor="0"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Error"/><Layout alignment="left" bullet="none" name="Heading 2" spaceabove="8.0" spacebelow="2.0"/><Layout alignment="left" bullet="none" name="Heading 1" spaceabove="8.0" spacebelow="4.0"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" name="Maple Plot"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" bold="false" executable="false" family="Lucida Bright" foreground="[0,0,0]" italic="false" name="Text" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Monospaced" foreground="[255,0,255]" name="Error" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 2" opaque="false" size="16"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 1" opaque="false" size="18"/><Font background="[0,0,0]" family="Lucida Bright" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">restart:
Digits := 100:
with (numapprox):with(orthopoly): </Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">read "Common_Maple_Procedures.mpl";
read "SCS_maple.mpl";
mkdir("TEMPATAN");</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, (in mkdir) directory exists and is not empty
</Text-field></Output></Group><Section><Title><Text-field layout="Heading 1" style="Heading 1">First, quick phase</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">Approach for the first function:
atan(x) = atan(b(i)) + atan ( (x-bi) / (1+x*b(i) ) )

We try to have 64 correct bits</Text-field></Input></Group><Section><Title><Text-field layout="Heading 2" style="Heading 2">Constants</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">if (x &gt;= xmax) : return arctan(x)/2)=neareast(Pi/2)</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log[2](evalf(min(solve(arctan(x)=nearest(Pi/2),x))));
xmax:=2^54:</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIl9xWmYlZS4iWy4oKkcpW0ZZK3diJDRGQ20sWCdlYWljITNMdHZhX0MjbyN5JkdbY0s1ITRzeiRbZVEmISMpKg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">halfPi=Pi/2 (remark that maxvalue &lt; Pi/2 so that atan(x) &lt; Pi/2</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">halfPi:=nearest(Pi/2);
halfPi_to_plus_infinity:=nearest(nearest(Pi/2)*(1+2^(-53)));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSdoYWxmUGlHNiIjIjBiTis+KHpVKSkiMDc4VWAqXEhj</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SThoYWxmUGlfdG9fcGx1c19pbmZpbml0eUc2IiMiMVQlRz92UFUyKCIxJ1xxdGkqZi5Y</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">if (xmin&lt;xmin) : return arctan(x)=x</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xmin=2^(-27);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMvSSV4bWluRzYiIyIiIiIqR3hATSI=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">ieeehexa(halfPi); ieeehexa( halfPi_to_plus_infinity ); ieeehexa(2^(-27));ieeehexa(2^(54));ieeehexa(2^(-10));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpM0ZGOTIxRkI2IlEpNTQ0NDJEMThGJQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpM0ZGOTIxRkI2IlEpNTQ0NDJEMTlGJQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpM0U0MDAwMDA2IlEpMDAwMDAwMDBGJQ==</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpNDM1MDAwMDA2IlEpMDAwMDAwMDBGJQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpM0Y1MDAwMDA2IlEpMDAwMDAwMDBGJQ==</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 2" style="Heading 2">Interval parameters</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">Some constants :</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">e:=2^(-6.3):
marge := 2^(-30):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text">The intervals are (a[i],a[i+1]). the "middle" is b(i) :</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">maxx := bi -&gt; simplify( solve( (x-bi) / (1+x*bi) = e ,x) ):
minx := bi -&gt; simplify(solve( (x-bi) /(1+x*bi)=-e ,x)):

nextbi := proc (x) evalf( max(solve( minx(bi) = x ,bi) )*(1-marge)); end:

allbi := proc (n)
  local xi,nbi,x,i,j;
  global b,a, nb_of_ai, nb_of_bi, value_for_dicho;
  x := e; 
  nbi := 0;
  i := 0;
  while(i&lt;n and nbi &lt; 1/e and nbi &gt;= 0) do
     nbi := nearest ( nextbi(x) );
     b[i] := evalf( nbi );
     a[i] := x;
     x   := evalf(maxx(nbi));
     i:=i+1;
  od;
  j:=0;
  while ( 2^j &lt; i ) do j:=j+1 od:
  nb_of_ai := i;
  nb_of_bi := i;
  b[i-1] := nearest(1/e+4):
  value_for_dicho := 2^j;
  return i,b[0],b[i-1];
end:

allbi(100);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiUiI2kkIl9xKysrKysrKysrKysrKysrKysrKysrXVBmTCVwJ1tSRnA1VFpJKEgmeXcoeSQ0U09DXndwUUQhJCwiIyIxKjMhKnlcY2cjZSIva3c8VyhvLig=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">The polynome and its size ( 4 because 4 terms : x^2/3, ...)</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Q9:= poly_exact(x-1/3*x^3+1/5*x^5 -1/7*x^7+1/9*x^9):
deg_poly := 4:
coef_poly[0]:=nearest (-1/3):
coef_poly[1]:=nearest (1/5):
coef_poly[2]:=nearest (-1/7):
coef_poly[3]:=nearest (1/9):

Q := x^2 * coef_poly[0] + x^4*coef_poly[1] + x^6*coef_poly[2] + x^8 * coef_poly[3]:

Qprime := poly_exact( x * coef_poly[0] + x^2*coef_poly[1] + x^3*coef_poly[2] + x^4 * coef_poly[3]):

log[2] (infnorm( (arctan(x)-x*(1+Q) )/x,x=2^(-53)..e));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xdFUpb1Auaml1bmpOaTNFNmFpZDQmRyZwUFUtZT0iMyJHSylbXSl6elMpKkdVRydmJUhWPFJ5ZychIykq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">We can note that arctan(x) = sum((-1)^i*x^(2*i+1)/(2*i+1), i = (0 .. infinity))
so ( arctan(x) - Q9(x) ) / x = sum((-1)^i*x^(2*i)/(2*i+1), i = (5 .. infinity))</Text-field><Text-field layout="Normal" style="Text">so abs ( (arctan(x) -Q9(x) )/x )  &lt;= x^10 * sum((-1)^(i+1)*x^(2*i)/(2*i+1+10), i = (0 .. infinity))
                                              &lt;= x^10 * 1/11</Text-field><Text-field layout="Normal" style="Text">                                              &lt;= 2^(-66) if x&lt;2^(-6.3)
 </Text-field></Input></Group></Section><Section><Title><Text-field layout="Heading 2" style="Heading 2">Conputation of the RN constant</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">Epsilon = relative error
Delta = absolute error</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text">1st : Error about reduction:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xminusBiepsilon := 2^(-105):

# 1 + x*b[i] :
oneA22xbiEps :=  2^(-104):

xminusbiDIV2eps := xminusBiepsilon+oneA22xbiEps + 2^(-105):

# Xred = (x-b[i]) / ( 1 + x*b[i] )

XredEpsilon := xminusbiDIV2eps:
XredDelta := XredEpsilon * e:
evalf(log[2](XredEpsilon)):

log[2](infnorm(XredEpsilon,xx=e..2^60));
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrSTUhIygq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Polynomial evaluation :
atan ~= x - x^3/3 + x^5/5 - x^7/7 + x^9/9
        ~= x * ( 1 + Q(x^2) )
    = (xhi+xlo) * ( 1 + Q) 
        ~= xhi + (xhi*Q + xlo)

Warning : the approx about x !!</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#calc of Q:
errorOnxred2 := 2^(-52)+2^(-105):

errlist:=errlist_quickphase_horner( degree( x^4 ),0,0,errorOnxred2, 2**(-53)):

rounding_error1:= compute_horner_rounding_error(Qprime,x,e,errlist,true):

EpsilonQ := rounding_error1[1]:

DeltaQ := EpsilonQ*e^2:
evalf(  log[2] (infnorm( (EpsilonQ,xx=e..2^60) ) ));

# calc of xi*Q + xlo + atan(b[i])lo
# the 2^(-105) is due to the addition of Xred_lo and atan(b[i])_lo

EpsilonxibyQ := 2^(-53):
DeltaXibyQ := EpsilonxibyQ * e^3:
DeltaTestlo := DeltaXibyQ + 2^(-105) + 2^(-53)*e^3:

log[2](DeltaTestlo);

# error due to the approx of atan by P : &lt; e^11/11
Deltaapprox := infnorm( (arctan(x)-x*(1+Q)), x=0..e):

log[2](Deltaapprox);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">step 4   epsmulk=3.3307e-16  deltaaddk=1.4347e-17   minSk=1.4145e-01   maxSk=1.4427e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 3   epsmulk=4.3450e-16  deltaaddk=1.4673e-17   minSk=1.9820e-01   maxSk=2.0183e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 2   epsmulk=4.0710e-16  deltaaddk=2.8798e-17   minSk=3.3082e-01   maxSk=3.3589e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 1   epsmulk=4.2012e-16  deltaaddk=1.7910e-18   minSk=0.0000e+00   maxSk=4.2630e-03
</Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xYCpwKEclenRRPnp6I3ozOmJkVVEmSGVpJkhGPTklKXp0KCpSJ0h5dSMzJVsoSGZmRCk9Zl47MCEzXiEjKSo=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xQnFJMjhwcWE4P1g3N25ibSdwJSk+Xjx4VHF5JWYqZXkvRTQnKVw4RC00PDhyWjsjKioqKioqKioqMyghIykq</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xdFUpb1Auaml1bmpOaTNFNmFpZDQmRyZwUFUtZT0iMyJHSylbXSl6elMpKkdVRydmJUhWPFJ5QighIykq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Reconstruction :  
atan(x) = atan(b[i]) + atan(Xred)
         ~= atan(b|i])hi + xhi + xhi*q + (testlo)</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">DeltaError := 2^(-105.)*Pi/2 + Deltaapprox + DeltaTestlo + 2^(-105.)*Pi/2:
EpsilonError := evalf( DeltaError / arctan(xx) ):
evalf(log[2] ( DeltaError ));

EpsilonFinal := infnorm( EpsilonError,xx=2^(-6.3)..1,'xmaxmax'):
EpsilonFinal_i_10 := infnorm( EpsilonError,xx=2^a[10]..2^60,'xmaxmax'):
evalf(log[2] ( EpsilonFinal ));
evalf(log[2] ( EpsilonFinal_i_10 ));
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xJHk3LSNRbzpDKVxAUXdBaC1HSysieV5fZkNxQlxMSG1IeEdmQ0VTS0pgcCdwTCQ+dXN2WHEhIykq</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xU29fbj4lZW8icDBVJGYrMTM3OiZvcT5RR2UjXHYqKlIubW9LI1InMyxmIlJzdS9fQnhHJlxkVCchIykq</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xQFhmKHlKWkpxVGtCL3Y2aVkjekpmRllQbXlzT3lyTmg9TEFYQUsncGQpb1BNKVFxOERzLSghIykq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Computation of e and e_i_30 (which is e when i&gt;30 (ie x&gt;1)</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">E := evalf(compute_rn_constant(EpsilonFinal));
E_i_10 := evalf(compute_rn_constant(EpsilonFinal_i_10));
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSJFRzYiJCJfcSsrKysrKysrKysrKysrKysrKysrKysrXWlscyU0KFIiek4rQSN5PS1QLkxnVl1WJSpmKDMrIiEjKio=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSdFX2lfMTBHNiIkIl9xKysrKysrKysrKysrKysrKysrKysrKytdaSFSXW0iZWIlUVJbJjNJKjRjdjMnM2l4TUUsKzUhIyoq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">An other Constant : when there is no reduction.</Text-field><Text-field layout="Normal" style="Text">We compute the polynome and then atan(x) = x + x.Q</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">errorOnx2 := 2^(-53):
errlist:=errlist_quickphase_horner( degree( Qprime ),0,0,errorOnxred2, 2**(-53)):
rounding_error:= compute_horner_rounding_error(Qprime,x,e,errlist,true):

epsilon_Q := rounding_error[1]:
log[2](epsilon_Q);

epsilon_x_Q := 2^(-52):

delta_final := 2^(-105)*x + epsilon_Q*x^3 + epsilon_x_Q*x^3 - arctan(x) + x*(1+Q):
epsilon_final := infnorm(delta_final/x,x=2^(-10)..e):
epsilon_final_m10 := infnorm(delta_final/x,x=2^(-24)..2^(-10)):

log[2](epsilon_final);
E_no_reduction := evalf(compute_rn_constant(epsilon_final));
E_no_reduction_m10 := evalf(compute_rn_constant(epsilon_final_m10));</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">step 4   epsmulk=3.3307e-16  deltaaddk=1.4347e-17   minSk=1.4145e-01   maxSk=1.4427e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 3   epsmulk=4.3450e-16  deltaaddk=1.4673e-17   minSk=1.9820e-01   maxSk=2.0183e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 2   epsmulk=4.0710e-16  deltaaddk=2.8798e-17   minSk=3.3082e-01   maxSk=3.3589e-01
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">step 1   epsmulk=4.2012e-16  deltaaddk=1.7910e-18   minSk=0.0000e+00   maxSk=4.2630e-03
</Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xYCpwKEclenRRPnp6I3ozOmJkVVEmSGVpJkhGPTklKXp0KCpSJ0h5dSMzJVsoSGZmRCk9Zl47MCEzXiEjKSo=</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xN2J3KHlBPWVseCV5eSUzQTxnRihlMWhgNiZwPUQvdkMya0koXFZxN1AjXD1Rc0NkXFo5KipHJyEjKSo=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SS9FX25vX3JlZHVjdGlvbkc2IiQiX3ErKysrKysrKysrKysrKysrKysrKysrK11pISp5JCkzLiJ6Pl4seHghUigpPXdNYWl4WicpNC01ISMqKg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+STNFX25vX3JlZHVjdGlvbl9tMTBHNiIkIl9xKysrKysrKysrKysrKysrKysrKysrKytdaVMicEwmZj4uamlPaDIwRkVQOTVURV04LCs1ISMqKg==</Equation></Text-field></Output></Group><Group><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIV9xaFRIRmxqKClIcWUkeVlwL0ghZUlQUV1hRzpmXldpQW9yYkwkKm80MFlYZV53JHpIOGMjcFVxISMpKg==</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 2" style="Heading 2">Output</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">#test
filename:="TEMPATAN/atan_fast.h":

fd:=fopen(filename, WRITE, TEXT):
fprintf(fd, "\n/*File generated by maple/coef_atan.mw */\n"):

fprintf(fd, "#ifndef _ATAN_FAST_H\n#define _ATAN_FAST_H\n\n");

fprintf(fd, "#include \"crlibm.h\"\n#include \"crlibm_private.h\"\n"):

fprintf(fd,"#ifdef WORDS_BIGENDIAN\n"):
fprintf(fd, "static const db_number HALFPI = {{0x3FF921FB,0x54442D18}};"):
fprintf(fd, "static const db_number HALFPI_TO_PLUS_INFINITY = {{0x3FF921FB,0x54442D19}};"):
fprintf(fd,"\n#else\n"):
fprintf(fd, "static const db_number HALFPI = {{0x54442D18,0x3FF921FB}};"):
fprintf(fd, "static const db_number HALFPI_TO_PLUS_INFINITY = {{0x54442D19,0x3FF921FB}};"):
fprintf(fd,"\n"):
fprintf(fd,"#endif\n"):

fprintf(fd, "#define MIN_REDUCTION_NEEDED %1.50f\n",e):

fprintf(fd,"#define nb_of_ai %d\n",nb_of_ai):
fprintf(fd,"#define nb_of_bi %d\n",nb_of_bi):

# we multiply by 2^(-20) in order to prevent from rounding
fprintf(fd, "static const double rncst[4] ={\n"):
fprintf(fd, "%1.50f , /* i&lt;10 */ \n",E*(1+2^(-20))) :
fprintf(fd, "%1.50f , /* i&gt;10 */ \n",E_i_10*(1+2^(-20))) :
fprintf(fd, "%1.50f , /* e &gt; 2^-10 */ \n",E_no_reduction*(1+2^(-20))) :
fprintf(fd, "%1.50f , /* e &lt; 2^-10 */ \n };\n",E_no_reduction_m10*(1+2^(-20))) :

fprintf(fd, "static const double delta[4] ={\n"):
fprintf(fd, "%1.50e ,\n",EpsilonFinal *(1+2^(-20))) :
fprintf(fd, "%1.50e ,\n",EpsilonFinal_i_10*(1+2^(-20))) :
fprintf(fd, "%1.50e ,\n",epsilon_final*(1+2^(-20))) :
fprintf(fd, "%1.50e ,\n };\n",epsilon_final_m10*(1+2^(-20))) :

fprintf(fd, "#define DEGREE %d\n", deg_poly):
fprintf(fd, "static double const coef_poly[%d] = \n{\n",deg_poly):

for i from deg_poly-1 to 0 by -1 do
    fprintf(fd, "/* coef for degree %d */ %1.50f, \n" , 2*i+3, coef_poly[i]):
od:
fprintf(fd," }; \n");

fprintf(fd,"#define A 0\n"):
fprintf(fd,"#define B 1\n"):
fprintf(fd,"#define ATAN_BHI 2\n"):
fprintf(fd,"#define ATAN_BLO 3\n"):

fprintf(fd,"\n#ifdef WORDS_BIGENDIAN\n "):

for isbig from 1 to 0 by -1 do

    if(isbig=0) then
        fprintf(fd,"#else\n");
    fi:
    
    if(not (nb_of_ai = nb_of_bi)) then
        printf("Warning : nb_of_ai != nb_of_bi, this should not work");
    fi:
    
    fprintf(fd,"\n/* limits of the intervals [a[i],b[i]] */\n");
    fprintf(fd, "static db_number const arctan_table[%d][4] = \n{\n" , nb_of_ai );

   for i from 0 to nb_of_ai - 1 do
        fprintf(fd, "{\n/*a[%d]     */ ",i);
        printendian(fd,a[i],isbig);
        fprintf(fd," ,\n/*b[%d] :   */ ",i):
        printendian(fd,b[i],isbig):
        fprintf(fd," ,\n/*atan_b[%d]*/ ",i):
        printendian(fd, arctan(b[i]) ,isbig):
        fprintf(fd,",");
        printendian(fd, arctan(b[i])-nearest(arctan(b[i])) ,isbig);
        fprintf(fd," ,\n}\n,");
    od;
    fprintf(fd,"\n};\n");
od:

fprintf(fd,"\n#endif\n\n"):

fprintf(fd, "#endif /* def _ATAN_FAST_H */\n");

fclose(fd);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI1Y=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiY=</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI0k=</Equation></Text-field></Output></Group></Section></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1">Scs phase</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">Now we want a precision of 130 bits in order to have correct rounding in all cases.</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(log[2](e^21/21));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xISpIKTN1OTk/IVw6YmNtMj45aHlWL0xUJT1pZU8uVDNTPHRrejZFM2QqKSlHZyh5RlU8QnBPIiEjKCo=</Equation></Text-field></Output></Group><Section><Title><Text-field layout="Heading 2" style="Heading 2">Test about Rounding :</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">error on the polynom :</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">P_scs := convert(series(arctan(x),x=0,21),polynom);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSZQX3Njc0c2Iiw2SSJ4R0YlIiIiKiRGJyIiJCMhIiJGKiokRiciIiYjRihGLiokRiciIigjRixGMSokRiciIiojRihGNCokRiciIzYjRixGNyokRiciIzgjRihGOiokRiciIzojRixGPSokRiciIzwjRihGQCokRiciIz4jRixGQw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(log[2](e^21/21));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xISpIKTN1OTk/IVw6YmNtMj45aHlWL0xUJT1pZU8uVDNTPHRrejZFM2QqKSlHZyh5RlU8QnBPIiEjKCo=</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 2" style="Heading 2">Intervals parameters</Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">We choose the same e and the same intervals as in the quick phase.

We have the same b[i]s and a[i]s but we save atan[b[i]] on 4 doubles</Text-field></Input></Group></Section><Section><Title><Text-field layout="Heading 2" style="Heading 2">Output</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">filename:="TEMPATAN/atan.h":
fd1:=fopen(filename, WRITE, TEXT):

fprintf(fd1, "#include \"crlibm.h\"\n#include \"crlibm_private.h\" \n#include \"atan_fast.h\"\n"):
fprintf(fd1, "\n/*File generated by maple/coef_atan.mw */\n"):

Write_SCS_poly(P_scs,fd1);

fprintf(fd1,"#define constant_poly_ptr (scs_ptr)&amp;constant_poly\n");

fprintf(fd1,"#ifdef WORDS_BIGENDIAN\n\n"):
for isbig from 1 to 0 by -1 do
   if isbig = 0 then
      fprintf(fd1, "\n#else\n"):
   fi:

   fprintf(fd1,"static const db_number atan_blolo[%d] = {\n",nb_of_ai);
   for i from 0 to nb_of_ai-1 do
      fprintf(fd1,"/* %d */  ",i):
      temp0 := nearest(arctan(b[i]));
      temp := nearest( arctan(b[i]) - nearest(arctan(b[i])));
      temp1 := nearest( arctan(b[i]) - temp -temp0);     
      printendian(fd1,temp1,isbig):
      fprintf(fd1,", \n");
   od:

   fprintf(fd1,"};\n"):

od:
fprintf(fd1,"\n#endif  /* WORDS_BIGENDIAN */ \n");

fclose(fd1);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiIiQ=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI10=</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiI0s=</Equation></Text-field></Output></Group></Section></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1">Scratch</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">25*(8+8+48)+48*5+8*5;30*8;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJSEpPQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJFMj</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">aline := [ [ a[n], arctan(a[n])] $n=1..nb_of_ai]:
bline := [ [ b[n], arctan(b[n])] $n=1..nb_of_ai]:

plot([(arctan(x)),aline, [[b[58],arctan(b[58])]]],x=0..20, style=[line,point,point],symbol=[point,point,box], color=black);</Text-field></Input><Output><Text-field layout="Maple Plot"><Plot height="293" type="two-dimensional" width="372"></Plot></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log[2](2^(-53)+2^(-53)+2^(-105.));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xUWlfJlJXJSopKVxPaHRVLWx2SHU2bV9dZU9iaTFNREgqKj5mQ1RENFtuRylSKSoqKioqKioqKioqKioqPiYhIykq</Equation></Text-field></Output></Group></Section><Group><Input><Text-field layout="Normal" style="Text">Tests , ...</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Qbern:=(x-&gt;bernstein(20,x-&gt;arctan(e*x),x))(x/e):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Q15:= poly_exact2(x-1/3*x^3+1/5*x^5 -1/7*x^7+1/9*x^9-1/11*x^11+1/13*x^13-1/15*x^15,1):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Q13:= poly_exact2(x-1/3*x^3+1/5*x^5 -1/7*x^7+1/9*x^9-1/11*x^11+1/13*x^13,6):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Q11:=poly_exact2(x-1/3*x^3+1/5*x^5 -1/7*x^7+1/9*x^9-1/11*x^11,6):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Q9:= poly_exact(x-1/3*x^3+1/5*x^5 -1/7*x^7+1/9*x^9):
Q7:= poly_exact2(x-1/3*x^3+1/5*x^5 -1/7*x^7,6):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">ieeehexa(2^(-27));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM3JFEpM0U0MDAwMDA2IlEpMDAwMDAwMDBGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">funtest := x -&gt; log[2] (abs( arctan(x) - (nearest(x) + nearest(x-nearest(x)))*(1+Qprime(x)))/x);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SShmdW50ZXN0RzYiZio2I0kieEdGJUYlNiRJKW9wZXJhdG9yR0YlSSZhcnJvd0dGJUYlLSZJJGxvZ0c2JEkqcHJvdGVjdGVkR0YwSShfc3lzbGliR0YlNiMiIiM2IyomLUkkYWJzR0YwNiMsJi1JJ2FyY3RhbkdGLzYjOSQiIiIqJiwmLUkobmVhcmVzdEdGJUY8Rj4tRkI2IywmRj1GPkZBISIiRj5GPiwmRj5GPi1JJ1FwcmltZUdGJUY8Rj5GPkZGRj5GPUZGRiVGJUYl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">(x-&gt;Q9)(x);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMsLEkieEc2IiIiIiokRiQiIiQjITFoMTsuJip6L2ciMiUpPls0JilSOSE9KiRGJCIiJiMiMShSJyo9cXpHZyRGKyokRiQiIigjITFwWE4sYlt0REYrKiRGJCIiKiMiMSgpb1FNKSpmLD9GKw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Paprox := x -&gt; poly_exact( (1-x^2/3+x^4/5-x^6/7+x^8/9) );
Paprox2:= x -&gt; (1-x^2/3+x^4/5-x^6/7+x^8/9);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSdQYXByb3hHNiJmKjYjSSJ4R0YlRiU2JEkpb3BlcmF0b3JHRiVJJmFycm93R0YlRiUtSStwb2x5X2V4YWN0R0YlNiMsLCIiIkYwKiQ5JCIiIyMhIiIiIiQqJEYyIiIlI0YwIiImKiRGMiIiJyNGNSIiKCokRjIiIikjRjAiIipGJUYlRiU=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SShQYXByb3gyRzYiZio2I0kieEdGJUYlNiRJKW9wZXJhdG9yR0YlSSZhcnJvd0dGJUYlLCwiIiJGLSokOSQiIiMjISIiIiIkKiRGLyIiJSNGLSIiJiokRi8iIicjRjIiIigqJEYvIiIpI0YtIiIqRiVGJUYl</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Section><Title><Text-field layout="Heading 1" style="Heading 1">Miscs</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xred := proc (x, i)
   local zhi,zlo; 
   zhi:=nearest( (1+x*b[i]));
   zlo:=nearest( (1+x*b[i])-zhi) ;
   return nearest(x-b[i]) / (zhi+zlo) ;
end:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">b[0]; 1+3.2785196602616348271475033016031375154852867126464843750000000000000000e-02*b[0];</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIl9xKysrKysrKysrKysrKysrKysrKysrXVBmTCVwJ1tSRnA1VFpJKEgmeXcoeSQ0U09DXndwUUQhJCwi</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIl9xaXNfUUclNCI0MFYmPjdxQkVTVCRvYWwjPWVHRkhbMEVuIz5yZ3BKTTUnPSM0QjFoLDxCJDMrIiEjKio=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xred1 := xred( nearest(1.32650645123e-2) , 0);
 
xred2 := nearest( -0.01211783120074071996852271837497028172947466373444 ) + nearest( -0.00000000000000000057144204317259781898382706214865 );
 
evalf( log [2] ( abs ( (xred2 - xred1 )/xred2)));
 
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSZ4cmVkMUc2IiMhP2MpcGhpS1QjenVrdUxZTSkqIkEyXXd0eWVuO3gsP2lmcDoiKQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSZ4cmVkMkc2IiMhQWZPPjYsTWM5T2hlKG9QPkgnIkMnND8jSGpcSSZHdyNbYGVvSCM+Jg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xWz4xQiRbMEB0OFleIio9alcmKilmVnopM3BmYiE9XksmcFk/Vz5BRlh5ITNNbzxcLicpeShbNWAmISMpKg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log[2](2^(-70.89)+2^(-72.4));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xQyEzKjNiWWRIblxaMjMoPlYnPkNyJlFWJ1xkeSxdXDEnUnBdJSpRdC5NNVFTTF04a2lOJmVYcSEjKSo=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">62*4*8+16+4*8;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJUs/</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">10*11*8+62*8;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJXc4</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">2032+1376;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMiJTNN</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">2^(-23.);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIl9xKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKytdN3ldJipHNCM+IiEkMSI=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(  log[2] (infnorm( (EpsilonQ,xx=e..2^60) ) ));</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, (in infnorm) function does not evaluate to numeric
</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">EpsilonQ := rounding_error1[1];</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiM+SSlFcHNpbG9uUUc2IiQiX3ErKysrKysrK05udDVdVmwjKilSOlYkM2Ajb19RdXhBKHBzKVJVeVwlPmEoKjM6QyIpeXQ4Jio9LFUhJDoi</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">printf("%1.50f ,\n",Epsilon_Final*(1+2^(-20))) :
printf("%1.50f ,\n",Epsilon_final_i_10*(1+2^(-20))) :
printf("%1.50f ,\n",epsilon_final*(1+2^(-20))) :
printf("%1.50f ,\n };\n",epsilon_final_m10*(1+2^(-20))) :</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, (in fprintf) number expected for floating point format
</Text-field></Output><Output><Text-field layout="Error" style="Error">Error, (in fprintf) number expected for floating point format
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">0.00000000000000000011627092912545121210398749492286 ,
0.00000000000000000000063006202137593507880984893987 ,
 };
</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log[2](1.2520027886969596771093624095525266282758576272260420125803648261353374e-15);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation>NiMkIV9xNHJZSD8+PyozWSNlcXFSeD9EKUdAM2A4ZU9tNTYqUip6Jj1qPHImKVE9KFJmOiRlJGZaT28vJlwhIykq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section></Worksheet></Text-field><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/></Worksheet>