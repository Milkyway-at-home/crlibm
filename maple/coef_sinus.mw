<?xml version="1.0" encoding="UTF-8"?>
<Worksheet><Version major="6" minor="0"/><View-Properties><Zoom percentage="100"/></View-Properties><Styles><Layout alignment="left" bullet="none" name="Warning"/><Layout alignment="left" bullet="none" name="Error"/><Layout alignment="left" bullet="none" name="Heading 2" spaceabove="8.0" spacebelow="2.0"/><Layout alignment="left" bullet="none" name="Heading 1" spaceabove="8.0" spacebelow="4.0"/><Layout alignment="left" bullet="none" firstindent="0.0" leftmargin="0.0" linebreak="space" name="Normal" rightmargin="0.0" spaceabove="0.0" spacebelow="0.0"/><Layout alignment="centred" bullet="none" linespacing="0.5" name="Maple Output"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Warning" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="false" executable="false" family="Lucida Bright" foreground="[0,0,0]" italic="false" name="Text" opaque="false" size="12" underline="false"/><Font background="[0,0,0]" family="Monospaced" foreground="[255,0,255]" name="Error" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 2" opaque="false" size="16"/><Font background="[0,0,0]" bold="true" family="Serif" name="Heading 1" opaque="false" size="18"/><Font background="[0,0,0]" family="Lucida Bright" foreground="[0,0,255]" name="2D Output" opaque="false" readonly="true" size="12"/><Font background="[0,0,0]" bold="true" executable="true" family="Monospaced" foreground="[255,0,0]" name="Maple Input" opaque="false" size="12"/><Font background="[0,0,0]" family="Monospaced" foreground="[0,0,255]" name="Line Printed Output" opaque="false" readonly="true" size="12"/></Styles><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">restart:
Digits := 55:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">with(numapprox):
with(orthopoly):
read "Common_maple_procedures.m";

testWorstCaseRN:=proc(x)
  local xh,xl,s,e,m:
  xh:=nearest(x):
  xl:=x-xh;
  s,e,m := ieeedouble(xl):
  convert(op(1,m),binary);
end proc:

mkdir("TEMPSIN");</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, (in mkdir) directory exists and is not empty
</Text-field></Output></Group><Section><Title><Text-field layout="Heading 1" style="Heading 1">Small arguments</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">max_x_Fastpoly:=2**(-4):
polyTaylorSinFast:=  poly_exact2 (convert( series(sin(x), x=0, 10), polynom),2);
approx_error:=infnorm(1 - polyTaylorSinFast / sin(x), x=-max_x_Fastpoly..max_x_Fastpoly):
log2(approx_error);
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STJwb2x5VGF5bG9yU2luRmFzdEc2IiwsSSJ4R0YlIiIiKiRGJyIiJCMhMWgxOy4mKnovZyIyb1InKj1xekdnJCokRiciIiYjIjFIJkdEZ1JRIVsiMylbQk1JXzJZdyYqJEYnIiIoIyExbEpmbyNvK20kIjU7O2I0UDJXblc9KiRGJyIiKiMiMUhPRTNxcEU7IjY3PGwwKGUuImVIIWY=</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIVhaLnJIUWNWUylHIltZXSsybzFTKnphaidbUiEpeVEnISNg</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">rounding_error:=compute_rel_rounding_error(polyTaylorSinFast,max_x_Fastpoly,2):
log2(rounding_error);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 7, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 5, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 3, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 1, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIVgmUTEuNGImXGQhNEteUm8tJTNQazxfb0c7QSlRZWghI2A=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(compute_rn_constant(rounding_error));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIlgrK0RjLFRxckdJO0ZdcXhFKSk+PyhbKjRcbktfKyIhI2E=</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1">Argument reduction</Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">bits_pio2hi0:=30;
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS1iaXRzX3BpbzJoaTBHNiIiI0k=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">invpio2:= nearest(2/Pi);
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SShpbnZwaW8yRzYiIyIxZkVBUjY7TWQiMSMqNHVhIyo+MiEq</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">pio2hi:= (round((evalf(Pi)/2) * (2**(bits_pio2hi0))) / (2**(bits_pio2hi0)));
r:=evalf(Pi/2 - pio2hi):
bits_pio2hi:=1+log2(op(2,ieeedouble(pio2hi)[3]));
pio2med:= round(r * (2**(2*bits_pio2hi))) / (2**(2*bits_pio2hi));
bits_pio2med:=1+log2(op(2,ieeedouble(pio2med)[3]));

pio2lo:=nearest(Pi/2 - pio2hi -pio2med);

kmax:=2**(53-max(bits_pio2hi, bits_pio2med));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSdwaW8yaGlHNiIjIis4KEhtbyIiK0M9dXQ1</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSxiaXRzX3BpbzJoaUc2IiQiI0oiIiE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SShwaW8ybWVkRzYiJCJlcSsrKysrKysrKysrKysrKysrKysrKysrKysrK11pU1RDREAtXTBFYyIpZUVhSG9cQzwpXCtyMichJDsi</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS1iaXRzX3BpbzJtZWRHNiIkIiNHIiIh</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSdwaW8ybG9HNiIjIjE4cC0ob10zdCIiRCVRISlvSiYpPjc5MEpSVFYoPXAyIw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSVrbWF4RzYiJCIoL1Y+JSIiIQ==</Equation></Text-field></Output></Group><Group><Output><Text-field layout="Maple Output" style="2D Output"/></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">error_factor_CodyWaite:=2**(-52-bits_pio2hi);
# which may be multiplied by kmax
abs_error_CodyWaite:= kmax * error_factor_CodyWaite; # = 2**(1-2*bits_pio2hi)
miny_accurate:=2**(1-2*bits_pio2hi+53+prec_CodyWaite);
rel_error_CodyWaite:= abs_error_CodyWaite/miny_accurate;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STdlcnJvcl9mYWN0b3JfQ29keVdhaXRlRzYiJCJlcSsrKysrKysrKysrKysrKysrKysrKysrXTdHaik0RSdRXkVkcGNgdTNsM0UqZSRmJUcicGxkKFIuIiEkSSI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STRhYnNfZXJyb3JfQ29keVdhaXRlRzYiJCJlcSsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKytdNy5kJW93ek0/NilIZ3Q8PyUqKm8zb0wlISRDIg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS5taW55X2FjY3VyYXRlRzYiJCIiIyIiIQ==</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+STRyZWxfZXJyb3JfQ29keVdhaXRlRzYiJCJlcSsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKytEY15HVSQpKVI8ZzBcLG8pMzUoXE0vJW9AISRDIg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log2(rel_error_CodyWaite);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxKSoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKj4nISQvIg==</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1">Polynomial evaluation</Text-field></Title><Text-field layout="Normal" style="Text"/><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">read "Common_maple_procedures.m";</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">degSin:=17;
degCos:=18;

</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSdkZWdTaW5HNiIiIzw=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSdkZWdDb3NHNiIiIz0=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">polyTaylorSin:=  poly_exact2 (convert( series(sin(x), x=0, degSin+1), polynom), 4);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS5wb2x5VGF5bG9yU2luRzYiLDRJInhHRiUiIiIqJEYnIiIkIyFCJjMjPlNgUSVmdmJaPjcmRzwzIiJCN0Q6VD9KbU5YYG9KMnIuXCcqJEYnIiImIyIxSCZHRGdSUSFbIjMpW0JNSV8yWXcmKiRGJyIiKCMhMWxKZm8jbyttJCI1OztiNFAyV25XPSokRiciIiojIjFIT0UzcXBFOyI2NzxsMChlLiJlSCFmKiRGJyIjNiMhMVRTViJ6JClHKj0iOE8iPk1LOWZzanlidiokRiciIzgjIjEmPV1XblREQCciO0t3ZiFmTCJvd0FFY29RKiRGJyIjOiMhMTJFWk9UUXR2Ij0jeiQqSD4qPlVJRzkuXy4qKiokRiciIzwjIjE0cilmWlhSYyQiQHdgPy5uXCwlSCNHLWddd0Ui</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">polyTaylorSin0:=  poly_exact (convert( series(sin(x), x=0, degSin+1), polynom));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS9wb2x5VGF5bG9yU2luMEc2Iiw0SSJ4R0YlIiIiKiRGJyIiJCMhMWgxOy4mKnovZyIyb1InKj1xekdnJCokRiciIiYjIjFIJkdEZ1JRIVsiMylbQk1JXzJZdyYqJEYnIiIoIyExbEpmbyNvK20kIjU7O2I0UDJXblc9KiRGJyIiKiMiMUhPRTNxcEU7IjY3PGwwKGUuImVIIWYqJEYnIiM2IyExVFNWInokKUcqPSI4TyI+TUs5ZnNqeWJ2KiRGJyIjOCMiMSY9XVduVERAJyI7S3dmIWZMIm93QUVjb1EqJEYnIiM6IyExMkVaT1RRdHYiPSN6JCpIPio+VUlHOS5fLioqKiRGJyIjPCMiMTRyKWZaWFJjJCJAd2A/Lm5cLCVII0ctZ113RSI=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">polyTaylorCos:= poly_exact2(convert( series(cos(x), x=0, degCos+1), polynom),5);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS5wb2x5VGF5bG9yQ29zRzYiLDYiIiJGJyokSSJ4R0YlIiIjIyEiIkYqKiRGKSIiJSMiQiYzIz5TYFElZnZiWj43Jkc8MyIiQ1sraGsiW19FOVFUbiNIJVtoZiMqJEYpIiInIyExUiFRK1o+XlMnIjQvelFGJT1nbzZZKiRGKSIiKSMiMWxKZm8jbyttJCI2R0hUdycqZV9SZFoiKiRGKSIjNSMhMS40aDF3Tiw4IjcncDhfa3BHW21CcyUqJEYpIiM3IyIwWjgiUUVoNGoiOVdsbiRIZE8hXFhKQUkqJEYpIiM5IyExcEklemlaKzUoIjw3QGNcdTghcFUnPisoKj0nKiRGKSIjOyMiMTJFWk9UUXR2Ij9zMSF6Myg9didHJkddS2MlZSIqJEYpIiM9IyExRjpVb0khZkwnIkFLP2QtWCp5JTNNLnQ/PltjUw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">polyTaylorCos0:= poly_exact(convert( series(cos(x), x=0, degCos+1), polynom));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SS9wb2x5VGF5bG9yQ29zMEc2Iiw2IiIiRicqJEkieEdGJSIiIyMhIiJGKiokRikiIiUjIjFoMTsuJip6L2ciM3NlJmUyKT06VDkqJEYpIiInIyExUiFRK1o+XlMnIjQvelFGJT1nbzZZKiRGKSIiKSMiMWxKZm8jbyttJCI2R0hUdycqZV9SZFoiKiRGKSIjNSMhMS40aDF3Tiw4IjcncDhfa3BHW21CcyUqJEYpIiM3IyIwWjgiUUVoNGoiOVdsbiRIZE8hXFhKQUkqJEYpIiM5IyExcEklemlaKzUoIjw3QGNcdTghcFUnPisoKj0nKiRGKSIjOyMiMTJFWk9UUXR2Ij9zMSF6Myg9didHJkddS2MlZSIqJEYpIiM9IyExRjpVb0khZkwnIkFLP2QtWCp5JTNNLnQ/PltjUw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log2(infnorm(1 - (polyTaylorSin / sin(x)), x=-Pi/4..Pi/4));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxIz1MPWFHJFJ4SGBQdkw4OSpcZmJhK2laZF5QbnRKLG5bJGYoW2pLV05idiNbK3YqUil6NTNiK2xqISQvIg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log2(infnorm(1 - (polyTaylorCos / cos(x)), x=-Pi/4..Pi/4));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxNHUnMz1dRF13cSVmNiYpUThqQiZlMSwwSlpiMlRVS0FaZGMtUlFIdDxqI29KIlEhKjR3WzV0SSdHbCEkLyI=</Equation></Text-field></Output></Group><Section collapsed="true"><Title><Text-field layout="Heading 2" style="Heading 2"><Font encoding="ISO8859-1">Bordel \340 PomPom</Font></Text-field></Title><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Poly_P := series(sin(sqrt(x))/(x^(3/2))-1/x, x=0, 40):
Poly_Q := convert(Poly_P,polynom):</Text-field></Input><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Poly_cheb := chebpade(Poly_Q, x=0..evalf(Pi/4), [17,0]):</Text-field></Input><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Poly_Res := x + x^3 * subs(x=x^2, Poly_cheb):</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log(infnorm( 1 - (Poly_Res)/sin(x),x=0..evalf(Pi/4), err))/log(2.);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWN3SlYiKilSJSlIaWU1JjNUeCxGP0xaWCQqZTVcUWVMR18hcFpqeDI+eHc6Y1xsNTsveWp1LjtOelhoJlxxejZZIT4uYFdrS2xadDBOYzRhK2BNMUR2IWU2KkdCJXBIXDRxJnlJRWsnKSlIJlx0Jj4hJCg+</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Poly_trunc:=poly_exact2(Poly_Res,2):
log(infnorm( 1 - (Poly_trunc)/sin(x),x=0..evalf(Pi/4))/log(2.));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWN3NicqUidwQF9KPFlqODotKTMpeip6MjJJVEFWIkgjeiopKmZOJClcMWV0eSJSPWZQJTRsKnpSLFptZmNZYkYqei0pM1ZCenUtKlwneTdhZXEoMz1VVyg+WmtJKG9bZktoJSoqW0csVW1RbSlRI3lVNUNSISQpPg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">poly_trunc_f2d_1(sin(x)/x, 12, 0.7);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiUsPCMiREIiKT0rbmNMMERiJ3BxciRmJVE1IkQjPlMlZUUqNDFkX2xwcXIkZiVRNSIiIkkieEc2IiMiMSpvJmV2XyQqb0giSm9qMUpqRV4oXD5KQkw3ISllJ0g5Y04lKiRGKCIiIyMhMWQxOy4mKnovZyIyb1InKj1xekdnJCokRigiIiQjIS5uKSllZSdIZCJGd1hNIUdncSFRIUgoZSJceSYqekFIOCokRigiIiUjIjFoaF8tJ1JRIVsiMylbQk1JXzJZdyYqJEYoIiImIyIxcCUqNFEhKTMqPSciR2tHMFV6Jj1sVmUnZWhNLXQiZnFdKSokRigiIicjITFeXm1uI28rbSQiNTs7YjRQMlduVz0qJEYoIiIoIyEwLHA4L2EmUmtGNiokRigiIikjIjEwJz4sTSh5MWwiN1tvZ0FbVlRLPWhCKiRGKCIiKiMiMSpcb1FjU3ojPUY2KiRGKCIjNSMhMShSdykpXHA3ZCgiOVdsbiRIZE8hXFhKQUkqJEYoIiM2IyExJj0uSilmaCFSKCJGLyR5ODdUI0dfaCJcaidSSik+InBKJiokRigiIzcjIjFaMFhqOSsiMyQiOzspKUgmem1TJFE2OEdNPiQiY3d6OWlPRGNYOF1uQiFRal1mW1NlMChSSzVGU24mPi8jenJbRyNbITNwJ3lzOlZAaVUiR1Y2QjpKb0IpNHcxS1JMZVglPmRyJD5kVmdGN1R5eDN2cjlMVE4kSDVgXiY0aSJwSyxtNnhEMkZRTyEkPCMkImN3Jm9TO2BubTwqKTROUCtsUScpKTQqSCdcLS8yUkZGTGxeNytIYiEpKjQydj8pPW9rQDtUQzBeUCY0WzpiXiF5IkhnLixJPl1jdHghUXFweG9DJT4lZjcpKls+cm9fJyplaFZ1SjlQKioqKioqKioqKioqKioqKioqISQrIw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">poly_trunc_f2d_2(sin(x)/x,12,0.7);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiUsPCokSSJ4RzYiIiIjIyFBaGhbNzZFISpwdVAoNGNVJzNhIkJjaWQ/ZzokeUVuVWVPYj1YSyokRiUiIiQjIS5uKSllZSdIZCJGd1hNIUdncSFRIUgoZSJceSYqekFIOCokRiUiIiUjIjFoaF8tJ1JRIVsiMylbQk1JXzJZdyYqJEYlIiImIyIxcCUqNFEhKTMqPSciR2tHMFV6Jj1sVmUnZWhNLXQiZnFdKSokRiUiIicjITFeXm1uI28rbSQiNTs7YjRQMlduVz0qJEYlIiIoIyEwLHA4L2EmUmtGLyokRiUiIikjIjEwJz4sTSh5MWwiN1tvZ0FbVlRLPWhCKiRGJSIiKiMiMSpcb1FjU3ojPUYvKiRGJSIjNSMhMShSdykpXHA3ZCgiOVdsbiRIZE8hXFhKQUkqJEYlIiM2IyExJj0uSilmaCFSKCJGLyR5ODdUI0dfaCJcaidSSik+InBKJiokRiUiIzcjIjFaMFhqOSsiMyQiOzspKUgmem1TJFE2OEdNPiMiREIiKT0rbmNMMERiJ3BxciRmJVE1IkQjPlMlZUUqNDFkX2xwcXIkZiVRNSIiIkYlIyJCck89P3FGKWZVJz1sU21yJ3A1ImVuQyNHJzNnNmgpKWVEU2c7PiFlTloqZTQ+cW0lUVZ2I3A6JCJjdyN6UTomPj8hKXBnWXUwJFFkJlFtYUBJQ1Y2TT4lelw9TW0zN21mWDZTaW9JOSozS3BbdSpSZE95RyNbeihSUVxvLmppd194dW8hUm9UIzNoQlEzRnV5OFM0ZVpuTzpeP1YxVypvREdZdz8oKSEkPSMkImN3YCd6TFIiR0N4LGtpQGBUIik9YCFmXCQzQz0iPTZZOFpUNVFrcyFvIkhKJj1rcHU7I0hMPSk9aWZnJSoqZWxuNCt5dkBeJUhyNzojKVFxcHhvQyU+JWY3KSpbPnJvXycqZWhWdUo5UCoqKioqKioqKioqKioqKioqKiEkKyM=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Over 0 .. 2**-26, P = x</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log(infnorm( 1 - x/sin(x),x=0..2**(-26)))/log(2.);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWN3XmUiUWlXRW5OLW9bQEY/bVpxNXRrVDxgJiozXGNeeiIqKio+dVtIN0wiKXpPXCVbakNvIzNUdCMqZiQ0RlxnRVYyKCkzIiopXDxeKFJxPTFMYyE9bHNRdiJHJiopeld3UHhLKEgvM1doOkAyXWlcZWEhJCk+</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Over 2**-26 .. 0.25</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xmax:=(0.25-2**(-26))/2:
poly_trunc_f2d_2(sin(x+xmax+2**(-26)), 12, xmax);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiUsPCokSSJ4RzYiIiIjIyFCMCZHc3BrX2c1SWR5W0VbdGsiRCM+UyVlRSo0MWRfbHBxciRmJVE1KiRGJSIiJCMhMSopempgIVt6JmYiMm9SJyo9cXpHZyQqJEYlIiIlIyIxLnkjPWR1IiopZiI0d3Alb2cvOiNIOiIqJEYlIiImIyIxKFE1SFdlanclIjMpW0JNSV8yWXcmKiRGJSIiJyMhMWYiMyRRa0ElPiQiNTs7YjRQMlduVz0qJEYlIiIoIyExUkA5KlFBSUUoIjVLSzU+dTkpWyQqbyQqJEYlIiIpIyIxRCZbL0RzXyM9IjY3PGwwKGUuImVIIWYqJEYlIiIqIyIvYkhHRSk9XyMiNDNleGFvLnNMQSoqJEYlIiM1IyExUkhcNEUlZmYjIjhPIj5NSzlmc2p5YnYqJEYlIiM2IyExRF1ASlcsNXYiOVdsbiRIZE8hXFhKQUkqJEYlIiM3IyIxKnkmPTR2WTtEIjozJVx3UkxxInBiMTluKiMiQyhHajhPUTBAQGc5ZChIbHAlSCJGKiIiIkYlIyJBJD41IjNvUzByWHFGIXpqJ1whKSJBa1M5MCEqeSZwIm8xWVRRJ0g2KSQiY3diUDZyKD4xQiVwcWh6KnlBdi5lSSozO0tDQl4jUk04TDsneTJNVj5LckVXczRBcitnYmUjekAkekg+ZndsWiM9MUVYJilvaER0N0NXSXgmKkc6OzgsJmYwTiZIQnAlKWZmNm4pZTkicDU5IylmPyIhJDcjJCJjdz5NVzZ5Nk8kPTNZUGN1YV9bLlFHMjE1JT1uKXpNWnMpKkhHI3lTJDQtWCJmYk1fLTVsI1xIXW1VKipmJlJAZCIpcF9bIipSViEpUjJuaCd6W1F6WigpR0U+RyZmL2AnenNeaFk9JmZISF9hI2ZSU1ojISQrIw==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" style="Text">Over 0.25 .. 0.855469</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">xmid:=(0.855469-0.25)/2:
a:=poly_trunc_f2d_2(sin(x+xmid), 8, xmid-0.25);
log2(a[2]);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSJhRzYiNiUsNCokSSJ4R0YlIiIjIyFCSF4pXGdLc1dablkqZVBOKlJ4IkMnND8jSGpcSSZHdyNbYGVvSCM+JiokRikiIiQjITEob3YoUUQkSFYiIjEjKjR1YSMqPjIhKiokRikiIiUjIjFQOndmJFIvZSQiM1c8cl5oUEkjKUcqJEYpIiImIyIxSGBIL1RRJmUlIjMpW0JNSV8yWXcmKiRGKSIiJyMhMXZObS0xRlF3IjU7O2I0UDJXblc9KiRGKSIiKCMhMUB3aSs3bVk8IjQzZXhhby5zTEEqKiRGKSIiKSMiMSgqKXpVISkpMyI0IiI2R0hUdycqZV9SZFoiIyJCZitTJz4sand2THQlem9uKnBRIkNDXUkjM0NFODJwcUxZQHUhKUgiIiIiRikjIkIsbzEjKjMpKm8iXCd6VXUxMClbOiJCRyIpRzUheTpSakxASG9GZkE7JCJidnEzO2AhUkstTDU8NDFSJjNNQkEqUVtYW3Y5JFJAZ3c8MDAhNCtbWF88WCl5KSpbZStPcHMheTlzcWRDXmteKlEhSEA+JFIsaVRNXFZ0Ilx0LENyeU00Qno4Qil6Iiopb0g0TzghJCwjJCJjdysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyt2JDRAO1QlMzh2JypSL0ZhaSt5ellJKVxtb0QhKWZjOnVqKT4tdXg4emlfInkiKlxZOXlBbmZeYFhRLDtjZFo+JDNJIVskISQrIw==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWN3emIsUEFNcnZJbSRvZWc3blMmKXlLRl4tIVJNUzwiUWdyLCJ5RTtdRnZ2Y0xnImZCKnBLTWhwKVwjcCFRZT9qKCoqZScpekRdXTUleVBTQVhLLyopKXkvcDlhUCFmP2l2SC92dyJlTV8zXVM4JylwaSEkKT4=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1">Output</Text-field></Title><Text-field/><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">filename:="TEMPSIN/sine_fast.h":
fd:=fopen(filename, WRITE, TEXT):

fprintf(fd, "#include \"crlibm.h\"\n#include \"crlibm_private.h\"\n"):

fprintf(fd, "\n/*File generated by maple/coef_sine.mw*/\n"):

fprintf(fd, "#define DEG_SIN %d\n", degSin):
fprintf(fd, "#define DEG_COS %d\n", degCos):
fprintf(fd, "#define MAX_FAST_SIN %1.30e\n", evalf(kmax*Pi/2)):
fprintf(fd, "#define MIN_RETURN_X_FOR_SINE  1.49e-8\n"):
fprintf(fd, "#define MINY_ACCURATE %1.30e \n", miny_accurate):
fprintf(fd, "#define RND_CST %f \n", compute_rn_constant(2*rel_error_CodyWaite)):

fprintf(fd,"#ifdef WORDS_BIGENDIAN\n"):
for isbig from 1 to 0 by -1 do

  if(isbig=0) then
    fprintf(fd,"#else\n"):
  fi;

  fprintf(fd, "\db_number const pio2hi = "):
  printendian(fd, pio2hi, isbig):
  fprintf(fd, " ;\n"):
  fprintf(fd, "\db_number const pio2med = "):
  printendian(fd, pio2med, isbig):
  fprintf(fd, " ;\n"):
  fprintf(fd, "\db_number const pio2lo = "):
  printendian(fd, pio2lo, isbig):
  fprintf(fd, " ;\n"):

  fprintf(fd, "\db_number const invpio2 = "):
  printendian(fd, invpio2, isbig):
  fprintf(fd, " ;\n\n"):

  # The sine polynomial

  # coeff 3 in double-double
  fprintf(fd,"db_number const Coef3Sin[2] =\n{\n"):
  ch,cl:= hi_lo(coeff(polyTaylorSin,x,3)):
  printendian(fd, ch, isbig):
  fprintf(fd," ,\n"):
  printendian(fd, cl, isbig):
  fprintf(fd, "\n};\n\n"):

  # The other Taylor coefficients
  fprintf(fd,"db_number const PolySin[%d] =\n{\n",(degSin-3)/2):
    for j from 5 to degSin by 2 do<Font italic="false" underline="false">
      coef:=coeff(polyTaylorSin,x,j):</Font>
      printendian(fd, coef, isbig):
      if j&lt;degSin then fprintf(fd," ,\n") fi:
    od:
  fprintf(fd, "\n};\n\n"):

  # the cos polynomial
  
  # the coeff of degree 4
  fprintf(fd,"db_number const Coef4Cos[2] =\n{\n"):
  ch,cl:= hi_lo(coeff(polyTaylorCos,x,4)):
  printendian(fd, ch, isbig):
  fprintf(fd," ,\n"):
  printendian(fd, cl, isbig):
  fprintf(fd, "\n};\n\n"):
  
  # The other Taylor coefficients
  fprintf(fd,"db_number const PolyCos[%d] =\n{\n",(degCos-4)/2):
    for j from 6 to degCos by 2 do<Font italic="false" underline="false">
      coef:=coeff(polyTaylorCos,x,j):</Font>
      printendian(fd, coef, isbig):
      if j&lt;degCos then fprintf(fd," ,\n") fi:
    od:

  fprintf(fd, "\n};\n\n"):

od:
fprintf(fd,"#endif /* WORDS_BIGENDIAN */\n\n\n"):

fclose(fd): 
</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log2(miny_accurate);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIVMsKysrKysrKysrKysrKysrKysrKysrKytxISNc</Equation></Text-field></Output></Group></Section><Section><Title><Text-field layout="Heading 1" style="Heading 1"/></Title><Section><Title><Text-field layout="Heading 2" style="Heading 2"><Font italic="true">Compute a bound on the accumulated rounding error caused by the Horner evaluation of a truncated polynomial </Font></Text-field></Title><Group><Input><Text-field layout="Normal" style="Text">Computes the accumulated rounding error during the polynomial evaluation.
P is the polynomial.
xmax is the max value of |x|.
n is the degree when P is computed in double double. The first double-double operation is an addition.</Text-field><Text-field layout="Normal" style="Text">
returns max absolute error, min of the function, max of the function. 
</Text-field><Text-field layout="Normal" style="Text">This procedure also checks on the fly that the fast (test-free) versions of the double-double addition can be used, i.e. that for all x, at each Horner step i computing ci+x*Si, we have |ci|&gt;|x*Si|. It prints warnings if it not the case. </Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">compute_abs_rounding_error:=proc(poly,xmax, xerr, nn)
local n, deg, delta, deltap, i, S, P, Snorm, Smin, Smax, prec:
deltap:=0:
delta:=0:
deg:=degree(poly):

prec:=53; # precision of the first iterations

S:=coeff(poly, x, deg):
Smax:=abs(S):
Smin:=Smax:

if nn&lt;0 then n:=0: else n:=nn: fi:# sometimes called by compute_rel_rounding_error with n=-1

for i from (deg-1) to 0 by -1 do
  P:= convert(S*x, polynom):
  Smin := abs(coeff(poly,x,i)) - xmax*Smax : 
  if(Smin&lt;=0) then 
    printf("Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration %d, consider decreasing xmax\n",i);
  fi:
  delta:= evalf(xmax*deltap + 2**(-prec)*xmax*Smax):
  if i&lt;n then 
    # fast Add22 ?    
    if abs(coeff(poly,x,i)) &lt; xmax*Smax  # may be improved to xmax*Smax/2
    then printf("WARNING Add22 cannot be used at step %d, use Add22Cond\n" , i  );   
         printf("    coeff=%1.20e,  xmax*Smax=%1.20e"  ,  abs(coeff(poly,x,i)),  xmax*Smax );
    fi:
  fi:
  S:=convert(P+coeff(poly,x,i), polynom):
  Snorm:=evalf(infnorm(S, x=-xmax..xmax)):
  if i=n-1 then prec:=100: fi:  # from the addition of the n-1-th iteration
  deltap:= evalf(delta + 2**(-prec)*(delta + Snorm)): 
  Smax := Snorm + deltap:  
od:
deltap, Smin, Smax;
end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Computes the total relative rounding error</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">compute_rel_rounding_error:=proc(poly,xmax, n)
local deg, p, rho, deltap, Smin, Smax:

deg:=degree(poly):
if(n&gt;0) then p:=100: else p:=53: fi: 

if coeff(poly,x, 0) = 0 then
   deltap, Smin, Smax := compute_abs_rounding_error(poly/x,xmax, n-1):
   rho :=  (2^(-p)*(Smax+deltap) +deltap ) / Smin :
else
   deltap, Smin, Smax := compute_abs_rounding_error(poly,xmax, n):
   rho := deltap /  Smin:
fi:
rho;
end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text"/></Input></Group><Group><Input><Text-field layout="Normal" style="Text">Computes the accumulated rounding error during the polynomial evaluation.
P is the polynomial.
xmax is the max value of |x|.
n is the degree when P is computed in double double. The first double-double operation is a multiplication (probably less useful).</Text-field><Text-field layout="Normal" style="Text">
returns max absolute error, min of the function, max of the function. 
</Text-field><Text-field layout="Normal" style="Text">This procedure also checks on the fly that the fast (test-free) versions of the double-double addition can be used, i.e. that for all x, at each Horner step i computing ci+x*Si, we have |ci|&gt;|x*Si|. It prints warnings if it not the case. </Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">compute_abs_rounding_error_firstmult:=proc(poly,xmax, nn)
local n, deg, delta, deltap, i, S, P, Snorm, Smin, Smax, prec:
deltap:=0:
delta:=0:
deg:=degree(poly):

prec:=53; # precision of the first iterations

S:=coeff(poly, x, deg):
Smax:=abs(S):
Smin:=Smax:

if nn&lt;0 then n:=0: else n:=nn: fi:# sometimes called by compute_rel_rounding_error with n=-1

for i from (deg-1) to 0 by -1 do
  if i=n-1 then prec:=100: fi:  # from the mult of the n-1-th iteration
  P:= convert(S*x, polynom):
  Smin := abs(coeff(poly,x,i)) - xmax*Smax : 
  if(Smin&lt;=0) then 
    printf("Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration %d, consider decreasing xmax\n",i);
  fi:
  delta:= evalf(xmax*deltap + 2**(-prec)*xmax*Smax):
  if i&lt;n then 
    # fast Add22 ?    
    if abs(coeff(poly,x,i)) &lt; xmax*Smax  # may be improved to xmax*Smax/2
    then printf("WARNING Add22 cannot be used at step %d, use Add22Cond\n" , i  );   
         printf("    coeff=%1.20e,  xmax*Smax=%1.20e"  ,  abs(coeff(poly,x,i)),  xmax*Smax );
    fi:
  fi:
  S:=convert(P+coeff(poly,x,i), polynom):
  Snorm:=evalf(infnorm(S, x=-xmax..xmax)):
  deltap:= evalf(delta + 2**(-prec)*(delta + Snorm)): 
  Smax := Snorm + deltap:  
od:
deltap, Smin, Smax;
end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" style="Text"/><Text-field layout="Normal" style="Text">Computes the total relative rounding error</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">compute_rel_rounding_error_firstmult:=proc(poly,xmax, n)
local deg, p, rho, deltap, Smin, Smax:

deg:=degree(poly):
if(n&gt;0) then p:=100: else p:=53: fi: 

if coeff(poly,x, 0) = 0 then
   deltap, Smin, Smax := compute_abs_rounding_error_firstmult(poly/x,xmax, n-1):
   rho :=  (2^(-p)*(Smax+deltap) +deltap ) / Smin :
else
   deltap, Smin, Smax := compute_abs_rounding_error_firstmult(poly,xmax, n):
   rho := deltap /  Smin:
fi:
rho;
end proc:</Text-field></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">compute_rel_rounding_error(polyTaylorSin, evalf(Pi/4), 5);</Text-field></Input><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 15, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 13, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 11, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 9, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 7, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 5, consider decreasing xmax
</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 3, consider decreasing xmax
WARNING Add22 cannot be used at step 3, use Add22Cond
    coeff=0.00000000000000000000e+00,  xmax*Smax=6.54498469497873659215e-03</Text-field></Output><Output><Text-field layout="Normal" style="Line Printed Output">Warning! in compute_abs_rounding_error, Smin&lt;=0 at iteration 1, consider decreasing xmax
WARNING Add22 cannot be used at step 1, use Add22Cond
    coeff=0.00000000000000000000e+00,  xmax*Smax=1.30899693899574719192e-01</Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkImVxc0k+aSYpeSR5LElNPkleSVA2YmNFKG9BSDRnTXQlKnA/JFtCYlkkZUxQVTh2cCZmIW9xPCIpR20rXiEpISRDIg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">log2(%);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxLlRYeWZBJW8+L2xIQCU9LzkoZS9KJj1QayNwXDJ2KT5vJ28nKlI/UDshNDhhKkcpKXlWKHBUaGlrdTVnISQvIg==</Equation></Text-field></Output></Group></Section><Text-field/></Section><Text-field/><Text-field/><Section><Title><Text-field layout="Heading 1" style="Heading 1">Test and scratch</Text-field></Title><Text-field layout="Normal" style="Text"/><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">argx:=2.686567430709293269330828479724004864692687988281250;
k:=2;
esx:=sin(argx);
testWorstCaseRN(sin(argx));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSVhcmd4RzYiJCJVXTdHKSl6byNwa1srQyh6JUczTHBLSDQyVm5sbyMhI14=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSJrRzYiIiIj</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSRlc3hHNiIkImVxXUwqSC0wVkVxMVFzOyI9eGxeYEsmbyEpKVw7SCk+YUVnVHFXJSlIdUIoem96ZjtwWyd5SW1ScVxbUiUhJDEi</Equation></Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMiVjY2Nis1NTU2KyssNSw2Kys1KysrKywsNjY2Ig==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">ey:=evalf(argx-k*Pi/2);
</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSNleUc2IiQhZHFbQCl6MTxATURbLkcnKSoqM2lHMWsieUkjZldcKDQjZSZRNDY5Wy8mPiEpXGJOIVwiPThwKipcISlHQURdWCEkMCI=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">eyh,eyl := hi_lo(ey);
eyhd:=ieeedouble(eyh);
eyld:=ieeedouble(eyl);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+NiRJJGV5aEc2IkkkZXlsR0YmNiQjITEkZjwlW0ddKTQlIjEjKjR1YSMqPjIhKiMhMT4iMzd5aktyJCJCY2lkP2c6JHlFblVlT2I9WEs=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSVleWhkRzYiNiUhIiIhIiMjIjEkZjwlW0ddKTQlIjFbX284KSp6XkE=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSVleWxkRzYiNiUhIiIhI2QjIjE+IjM3eWpLciQiMVtfbzgpKnpeQQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">yh,yl:= hi_lo(argx-k*pio2hi -k*pio2lo);
yhd:=ieeedouble(yh);
yld:=ieeedouble(yl);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+NiRJI3loRzYiSSN5bEdGJjYkIyExJGY8JVtHXSk0JSIxIyo0dWEjKj4yISojISwkPnhcOzkiPUNVNyoqW0YhUSZHUislekIi</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSR5aGRHNiI2JSEiIiEiIyMiMSRmPCVbR10pNCUiMVtfbzgpKnpeQQ==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSR5bGRHNiI2JSEiIiEjZCMiLCQ+eFw7OSIrI2ZNKiplKQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(yl);
evalf(eyl);
log2(abs(yl-eyl));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxKysrKysrKysrKysrKysrK0QxUnZzP0okSCE+KVtoVCNIKipwdUJLeCRRUy8oUVJfZ29ZQ1h4Qlc2ISRBIg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxKysrKysrK3ZWdHhyJilmRmUyOXRpZ2B2SG09bkh1PUwvWCtCVkUhPTxeS0ROZmonPkFYeEJXNiEkQSI=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxLj5DNU89WjE5eS1yail5ImZtKT5yRCQ+NDonRzdfcnQ8U2BOVzF2Wms4bm95Si5EUFJIOzpKPSohJC8i</Equation></Text-field></Output></Group><Group><Output><Text-field layout="Maple Output" style="2D Output"/></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">x:=ey:
rp:=evalf(polyTaylorSin):
log2(abs(abs(rp)-abs(esx)));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxJEhuIkc8O0InKVtGPGZlOywiZTomR2NDR3Mqb0VfKilSJSpcLEYiPjkrPV5RQnckNENSczVnZGUsKmVvISQvIg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">x:=yh:
rp:=evalf(polyTaylorSin):
log2(abs(abs(rp)-abs(esx)));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIWVxJkcsPmMnWyMqKkhKWT0hZSdSYUlcREZAYyhRU2pSYGZbOHhbckE0JiplbnFsJ3oieXYwbGMuIWUpR1ZjISQvIg==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">convert(cos(y), binary);</Text-field></Input><Output><Text-field layout="Error" style="Error">Error, invalid input: convert/binary expects its 1st argument, n, to be of type {float, integer}, but received cos(y)
</Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">Digits:=106;</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSdEaWdpdHNHNiIiJDEi</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">testWorstCaseRN(sin(3.8833811370031418164217029698193073272705078125000000000000000000000000e+02));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMiUzY2NTYsNjUsNjY2Niw2NTUrNSssLDYsNjY=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">  xh:=nearest(sin(x)):
  xl:=x-xh;
  s,e,m := ieeedouble(xl):
  convert(op(1,m),binary);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM+SSN4bEc2IiQiZXErKysrKysrKysrKysrKysrKysrKysrKysrKytdaVM7b1s2RiFvJVFyJCpvUVBfWGlFSmdDM1pBISQwIg==</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMiVSw1LCssLCw2LDU2KzY2NSs2KysrLDY2Nis1</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">series(cos(x), x=0, degCos+1);series(sin(x), x=0, degSin+1);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMrOUkieEc2IiIiIiIiISMhIiIiIiNGKiNGJiIjQyIiJSNGKSIkPygiIicjRiYiJj8uJSIiKSNGKSIoKylHTyIjNSNGJiIqKzsreiUiIzcjRikiLCs3SHlyKSIjOSNGJiIvKyEpKSkqeUE0IyIjOyNGKSIxKyFHZHF0QlMnIiM9LUkiT0dJKnByb3RlY3RlZEdGRTYjRiYiIz4=</Equation></Text-field><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMrN0kieEc2IiIiIkYmIyEiIiIiJyIiJCNGJiIkPyIiIiYjRigiJVNdIiIoI0YmIichKUdPIiIqI0YoIikrbyIqUiIjNiNGJiIrKzMtRmkiIzgjRigiLishb1ZuMjgiIzojRiYiMCtnNEd1b2IkIiM8LUkiT0dJKnByb3RlY3RlZEdGQjYjRiYiIz0=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">hi_lo(1/24);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiQjIjFoMTsuJip6L2ciM3NlJmUyKT06VDkjRiQiQ1sraGsiW19FOVFUbiNIJVtoZiM=</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">hi_lo(1/6);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiQjIjFoMTsuJip6L2ciMm9SJyo9cXpHZyQjRiQiQjdEOlQ/Sm1OWGBvSjJyLlwn</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">testWorstCaseRN(sin(2.4308940283059966168366372585296630859375000000000000000000000000000000e+05));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMiVCwsKywrLDUsKzU1LDUsKzUrLCssNjY2NjYi</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">evalf(2**20)</Text-field></Input><Output><Text-field layout="Warning" style="Warning">Warning, inserted missing semicolon at end of statement, evalf(2**20);
 4.99999999999999999999950396842453E-01</Text-field></Output><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMkIih3Jls1IiIh</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">testWorstCaseRN(sin(2.52113814338773334355892075109295547008514404296875e-01));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMiViw1NTU1Niw2LDY2LCs2LDU1LCwrNTU1NjY2Ig==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">zivfail1:=2.52113814338773334355892075109295547008514404296875e-01:
zivfail1:=2.52607138630281835567359394190134480595588684082031e-01:
ieeehexa(zivfail1);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM3JFEpM0ZEMDJBQjc2IlEpMjFDOUNFMDJGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">ieeehexa(nearest(sin(zivfail1)));</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiM3JFEpM0ZDRkVFMDY2IlEpRTYwQkMzMUZGJQ==</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input">nearest( 4.99999999999999999999950396842453E-01);</Text-field></Input><Output><Text-field layout="Maple Output" style="2D Output"><Equation style="2D Output">NiMjIiIiIiIj</Equation></Text-field></Output></Group><Group><Input><Text-field layout="Normal" prompt="&gt; " style="Maple Input"/></Input></Group><Text-field/></Section><Text-field/><Text-field/><Text-field/><Text-field/><Text-field/></Worksheet>